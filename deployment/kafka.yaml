apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  ports:
  - name: "kafka"
    port: 9092
    targetPort: 9092
  selector:
    app: kafka
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  ports:
  - name: "zookeeper"
    port: 2181
    targetPort: 2181
  selector:
    app: zookeeper
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  strategy: {}
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
        image: bitnami/zookeeper:latest
        imagePullPolicy: Always
        name: zookeeper
        ports:
        - containerPort: 2181
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy: {}
  template:
    metadata:
       labels:
        app: kafka
    spec:
      containers:
      - env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        image: bitnami/kafka:latest
        imagePullPolicy: Always
        name: kafka
        ports:
        - containerPort: 9092
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
status: {}
